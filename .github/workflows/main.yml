name: CI

on:
  push:
    branches: [ master ]
  pull_request:

  workflow_dispatch:

jobs:
  phpunit:
    name: Test on PHP ${{ matrix.php }} and Symfony ${{ symfony-require }}
    runs-on: ubuntu-latest
    env:
      SYMFONY_REQUIRE: ${{ matrix.symfony-require }}

    strategy:
      fail-fast: false
      matrix:
        php:
          - 7.1
          - 7.2
          - 7.3
          - 7.4
        dependencies:
          - highest
        stability:
          - stable
        symfony-require:
          - ""
        include:
          # Tests the lowest set of dependencies
          - dependencies: lowest
            stability: stable
            php: 7.1

          # Test legacy LTS
          - symfony-require: 4.4.*
            dependencies: stable
            php: 7.4

          # Test latest LTS
          - symfony-require: 5.4.*
            dependencies: highest
            php: 8.0

          # Test last supported minor version
          - symfony-require: 6.*
            dependencies: highest
            php: 8.0

          # Bleeding edge
          - php: 8.1
            dependencies: highest
            stability: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP with XDebug
        uses: shivammathur/setup-php@v2
        if: ${{ matrix.php == '7.1' }}
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
          ini-values: zend.assertions=1

      # - name: Install PHP with PCOV
      #   uses: "shivammathur/setup-php@v2"
      #   if: "${{ matrix.php != '7.1' }}"
      #   with:
      #     php-version: "${{ matrix.php }}"
      #     coverage: "pcov"
      #     ini-values: "zend.assertions=1"
      #     extensions: "pdo_sqlite"

      - name: Globally install symfony/flex
        run: composer global require --no-progress --no-scripts --no-plugins symfony/flex

      - name: Enforce using stable dependencies
        run: composer config minimum-stability stable
        if: ${{ matrix.stability == 'stable' }}

      - name: Install dependencies with Composer
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.dependencies }}
          composer-options: --prefer-dist

      - name: Run PHPUnit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage file
        uses: actions/upload-artifact@v3
        with:
          name: phpunit-${{ matrix.php }}-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}.coverage
          path: coverage.xml
